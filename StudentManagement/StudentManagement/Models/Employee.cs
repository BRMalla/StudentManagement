//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StudentManagement.Models
{
    using System;
    using System.Collections.Generic;
	using System.ComponentModel.DataAnnotations;
	using System.Web;
    
    public partial class Employee
    {
        public int EmployeeId { get; set; }
		[Required(ErrorMessage = "The Employee name cannot be blank")]
		[StringLength(50, MinimumLength = 3, ErrorMessage = "Please enter a Employee name between 3 and 50 characters in length")]
		[RegularExpression(@"^[A-Z]+[a-zA-Z''-'\s]*$", ErrorMessage = "Please enter a Employee name beginning with a capital letter and made up of letters and spaces only")]
		[Display(Name = "First Name")]
		public string Employee_First_Name { get; set; }
		[StringLength(50, MinimumLength = 3, ErrorMessage = "Please enter a Employee name between 3 and 50 characters in length")]
		[RegularExpression(@"^[A-Z]+[a-zA-Z''-'\s]*$", ErrorMessage = "Please enter a Employee name beginning with a capital letter and made up of letters and spaces only")]
		[Display(Name = "Middle Name")]
		public string Employee_Middle_Name { get; set; }
		[Required(ErrorMessage = "The Employee name cannot be blank")]
		[StringLength(50, MinimumLength = 3, ErrorMessage = "Please enter a Employee name between 3 and 50 characters in length")]
		[RegularExpression(@"^[A-Z]+[a-zA-Z''-'\s]*$", ErrorMessage = "Please enter a Employee name beginning with a capital letter and made up of letters and spaces only")]
		[Display(Name = "Last Name")]
		public string Employee_Last_Name { get; set; }
		[Required(ErrorMessage = "The Address  cannot be blank")]
		[Display(Name = "Address")]
		public string Employee_Address { get; set; }
		[Required(ErrorMessage = "The Gender  cannot be blank")]
		[Display(Name = "Gender")]
		public Nullable<int> GenderId { get; set; }
		[Required(ErrorMessage = "The Date OF Birth  cannot be blank")]
		[Display(Name = "Date OF Birth")]
		public Nullable<System.DateTime> Employee_Date_of_Birth { get; set; }
		[Required(ErrorMessage = "The Parment Address  cannot be blank")]
		[Display(Name = "Parment Address")]
		public string Employee_Parment_Address { get; set; }
		[Required(ErrorMessage = "The Mobile No  cannot be blank")]
		[Display(Name = "Mobile No")]
		public Nullable<int> Employee_Mobile_No { get; set; }
		[Required(ErrorMessage = "The Email  cannot be blank")]
		[Display(Name = "Email")]
		public string Employee_Email { get; set; }
		[Required(ErrorMessage = "The Parents name cannot be blank")]
		[StringLength(50, MinimumLength = 3, ErrorMessage = "Please enter a Parents name between 3 and 50 characters in length")]
		[RegularExpression(@"^[A-Z]+[a-zA-Z''-'\s]*$", ErrorMessage = "Please enter a Parents name beginning with a capital letter and made up of letters and spaces only")]
		[Display(Name = "Parents First Name")]
		public string Employee_Parents_First_Name { get; set; }
		[StringLength(50, MinimumLength = 3, ErrorMessage = "Please enter a Parents name between 3 and 50 characters in length")]
		[RegularExpression(@"^[A-Z]+[a-zA-Z''-'\s]*$", ErrorMessage = "Please enter a Parents name beginning with a capital letter and made up of letters and spaces only")]
		[Display(Name = "Parents Middle Name")]
		public string Employee_Parents_Middle_Name { get; set; }
		[Required(ErrorMessage = "The Parents name cannot be blank")]
		[StringLength(50, MinimumLength = 3, ErrorMessage = "Please enter a Parents name between 3 and 50 characters in length")]
		[RegularExpression(@"^[A-Z]+[a-zA-Z''-'\s]*$", ErrorMessage = "Please enter a Parents name beginning with a capital letter and made up of letters and spaces only")]
		[Display(Name = "Parents Last Name")]
		public string Employee_Parents_Last_Name { get; set; }
		[Required(ErrorMessage = "The Rank cannot be blank")]
		[Display(Name = "Rank")]
		public string Employee_Rank { get; set; }
		[Required(ErrorMessage = "The Photo cannot be blank")]
		[Display(Name = "Photo")]
		public string Employee_Photo { get; set; }
    
        public virtual Gender Gender { get; set; }
		public HttpPostedFileBase ImageFile { get; set; }
    }
}
