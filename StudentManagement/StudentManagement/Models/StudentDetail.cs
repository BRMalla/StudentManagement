//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace StudentManagement.Models
{
    using System;
    using System.Collections.Generic;
	using System.ComponentModel.DataAnnotations;
	using System.Web;

	public partial class StudentDetail
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public StudentDetail()
        {
            this.Marksheets = new HashSet<Marksheet>();
        }
    
        public int StudentID { get; set; }
		[Required(ErrorMessage = "The Student name cannot be blank")]
		[StringLength(50, MinimumLength = 3, ErrorMessage = "Please enter a Student name between 3 and 50 characters in length")]
		[RegularExpression(@"^[A-Z]+[a-zA-Z''-'\s]*$", ErrorMessage = "Please enter a Student name beginning with a capital letter and made up of letters and spaces only")]
		[Display(Name = "First Name")]
		public string StudentFirstName { get; set; }
		[StringLength(50, MinimumLength = 3, ErrorMessage = "Please enter a Student name between 3 and 50 characters in length")]
		[RegularExpression(@"^[A-Z]+[a-zA-Z''-'\s]*$", ErrorMessage = "Please enter a Student name beginning with a capital letter and made up of letters and spaces only")]
		[Display(Name = "Middle Name")]
		public string StudnetMiddleName { get; set; }
		[Required(ErrorMessage = "The Student name cannot be blank")]
		[StringLength(50, MinimumLength = 3, ErrorMessage = "Please enter a Student name between 3 and 50 characters in length")]
		[RegularExpression(@"^[A-Z]+[a-zA-Z''-'\s]*$", ErrorMessage = "Please enter a Student name beginning with a capital letter and made up of letters and spaces only")]
		[Display(Name = "Last Name")]
		public string StudentLastName { get; set; }
		[Required(ErrorMessage = "TheDate Of Birth cannot be blank")]
		[Display(Name = "Date Of Birth ")]
		public Nullable<System.DateTime> StudentDateOfBirth { get; set; }
		[Required(ErrorMessage = "The Gender cannot be blank")]
		[Display(Name = "Gender ")]
		public Nullable<int> GenderId { get; set; }
		[Required(ErrorMessage = "The Nationality cannot be blank")]
		[Display(Name = "Nationality ")]
		public string StudentNationality { get; set; }
		[Required(ErrorMessage = "The Maritial Status cannot be blank")]
		[Display(Name = "Maritial Status ")]
		public string StudentMaritialStatus { get; set; }
		[Display(Name = "Blood Group ")]
		public Nullable<int> BloodGroupId { get; set; }
		[Required(ErrorMessage = "The Phone No cannot be blank")]
		[Display(Name = "Phone No ")]
		public Nullable<int> StudentPhoneNo { get; set; }
		[Required(ErrorMessage = "The Mobile No cannot be blank")]
		[Display(Name = "Mobile No ")]
		public Nullable<int> StudentMobileNo { get; set; }
		[Required(ErrorMessage = "The Email cannot be blank")]
		[Display(Name = "Email ")]
		public string SrudentEmail { get; set; }
		[Required(ErrorMessage = "The Parent name cannot be blank")]
		[StringLength(50, MinimumLength = 3, ErrorMessage = "Please enter a Parent name between 3 and 50 characters in length")]
		[RegularExpression(@"^[A-Z]+[a-zA-Z''-'\s]*$", ErrorMessage = "Please enter a Parent name beginning with a capital letter and made up of letters and spaces only")]
		[Display(Name = "Parent First Name")]
		public string StudentParentFirstName { get; set; }
		[StringLength(50, MinimumLength = 3, ErrorMessage = "Please enter a Parent name between 3 and 50 characters in length")]
		[RegularExpression(@"^[A-Z]+[a-zA-Z''-'\s]*$", ErrorMessage = "Please enter a Parent name beginning with a capital letter and made up of letters and spaces only")]
		[Display(Name = "Parent Middle Name")]
		public string StudentParentMiddleName { get; set; }
		[Required(ErrorMessage = "The Parent name cannot be blank")]
		[StringLength(50, MinimumLength = 3, ErrorMessage = "Please enter a Parent name between 3 and 50 characters in length")]
		[RegularExpression(@"^[A-Z]+[a-zA-Z''-'\s]*$", ErrorMessage = "Please enter a Parent name beginning with a capital letter and made up of letters and spaces only")]
		[Display(Name = "Parent Last Name")]
		public string StudentParentLastName { get; set; }
		[Required(ErrorMessage = "The Parent Mobile No cannot be blank")]
		[Display(Name = "Parent Mobile No ")]
		public Nullable<int> StudentParentMobileNo { get; set; }
		[Required(ErrorMessage = "The Faculty cannot be blank")]
		[Display(Name = "Faculty")]
		public Nullable<int> FacultyID { get; set; }
		[Required(ErrorMessage = "The Address cannot be blank")]
		[Display(Name = "Address")]
		public string StudentAddress { get; set; }
		[Required(ErrorMessage = "The photo cannot be blank")]
		[Display(Name = "photo")]
		public string Student_photo { get; set; }
    
        public virtual BloodGroup BloodGroup { get; set; }
        public virtual Faculty Faculty { get; set; }
        public virtual Gender Gender { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Marksheet> Marksheets { get; set; }
		public HttpPostedFileBase ImageFile { get; set; }
	}
}
